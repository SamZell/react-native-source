package com.facebook.react.bridge;

import com.facebook.jni.HybridData;
import com.facebook.proguard.annotations.DoNotStrip;

/**
 * 一个js VM可以调入本机模块对应的类。在java，这应该仅被视为一个黑盒子是用来帮助框架路线本地-> JS调用返回
 *适当的JS VM。看到{@link reactcontext # getjsmodule（executortoken，类）}，
 * {@link basejavamodule # supportswebworkers() }。
 *
 *注意：如果你的应用程序不使用网络多线程，它将只有一个单一的executortoken每一个实例的反应。
 * Class corresponding to a JS VM that can call into native modules. In Java, this should
 * just be treated as a black box to be used to help the framework route native->JS calls back to
 * the proper JS VM. See {@link ReactContext#getJSModule(ExecutorToken, Class)} and
 * {@link BaseJavaModule#supportsWebWorkers()}.
 *
 * Note: If your application doesn't use web workers, it will only have a single ExecutorToken
 * per instance of React Native.
 */
@DoNotStrip
public class ExecutorToken {

  private final HybridData mHybridData;

  @DoNotStrip
  private ExecutorToken(HybridData hybridData) {
    mHybridData = hybridData;
  }
}
